train$LotFrontage[is.na]=mean(train$LotFrontage)
train$LotFrontage[which(is.na)]=mean(train$LotFrontage)
#House prices
library(ggplot2)
library(dplyr)
library(randomForest)
#Data import
setwd("/home/sudhir/git/ML-R/House_price")
train<-read.csv('train.csv',na.strings = c("","-"," ","NA","na","Na","_"))
test<-read.csv('test.csv',na.strings = c("","-"," ","NA","na","Na","_"))
str(train)
#finding missing values
mis<-table(is.na(train))
mis
mis[2]*100/(nrow(train)*ncol(train))
colSums(is.na(train))
numeric_var<-names(train)[which(sapply(train,is.numeric))]
colSums(is.na(train[,numeric_var]))
#Replacing missing value with mean
table(is.na(train$LotFrontage))
summary(train$LotFrontage)
train$LotFrontage[which(is.na)]=mean(train$LotFrontage)
train$LotFrontage[is.na(train$LotFrontage)]=mean(train$LotFrontage)
table(is.na(train$LotFrontage))
train$LotFrontage[is.na(train$LotFrontage),]=mean(train$LotFrontage)
train$LotFrontage[is.na(train$LotFrontage)]=mean(train$LotFrontage,na.rm = TRUE)
table(is.na(train$LotFrontage))
colSums(is.na(train[,numeric_var]))
table(is.na(train$MasVnrArea))
train$MasVnrArea[is.na(train$MasVnrArea)]=mean(train$MasVnrArea,na.rm = TRUE)
table(is.na(train$MasVnrArea))
table(is.na(train$GarageYrBlt))
train$GarageYrBlt[is.na(train$GarageYrBlt)]=mean(train$GarageYrBlt,na.rm=TRUE)
table(is.na(train$GarageYrBlt))
cat_var<-names(train)[which(sapply(train,is.character))]
str(train)
cat_var<-names(train)[which(sapply(train,is.factor))]
table(is.na(train[cat_var]))
colSums(is.na(train[cat_var]))
table(train$Alley)
View(train)
table(train$Alley)
table(train$PoolQC)
summary(train$PoolQC)
summary(train$Fence)
summary(train$MiscFeature)
summary(train$MasVnrType)
train$MasVnrType[is.na(train$MasVnrType)]='None'
summary(train$MasVnrType)
summary(train$BsmtQual)
train$BsmtQual[is.na(train$BsmtQual)]='Gd'
summary(train$BsmtQual)
summary(train$BsmtCond)
train$BsmtCond[is.na(train$BsmtCond)]='TA'
summary(train$BsmtExposure)
summary(train$BsmtFinSF1)
summary(train$BsmtFinType1)
na.roughfix(train$BsmtFinType1)
train$BsmtFinType1[is.na(train$BsmtFinType1)]='Unf'
summary(train$BsmtFinType2)
train$BsmtFinType2[is.na(train$BsmtFinType2)]='Unf'
summary(train$BsmtFinType2)
summary(train$Electrical)
train$Electrical[is.na(train$Electrical)]='SBrkr'
summary(train$FireplaceQu)
summary(train$GarageType)
train$GarageType[is.na(train$GarageType)]='Attchd'
summary(train$GarageType)
summary(train$GarageFinish)
summary(train$GarageCond)
train$GarageCond[is.na(train$GarageCond)]='Ta'
train$GarageCond[is.na(train$GarageCond)]='TA'
summary(train$GarageCond)
cor(train)
anova(train)
class(train)
summary(train$GarageQual)
train$GarageQual[is.na(train$GarageQual)]='TA'
summary(train$GarageQual)
attach(train)
ign=c('Alley','PoolQC','Fence','MiscFeature')
train1=train[,-ign]
train1=train[,-c('Alley','PoolQC','Fence','MiscFeature')]
train1=train[,c('Alley','PoolQC','Fence','MiscFeature')]
train1=train[,-c('Alley','PoolQC','Fence','MiscFeature')]
train1=train[,-c('Alley','PoolQC','Fence','MiscFeature')]
train1=train[,-colnames('Alley','PoolQC','Fence','MiscFeature')]
summary(train$MiscFeature)
train1=train[,-colnames('Alley','PoolQC','Fence','MiscFeature')]
train1=train[,-colnames('Alley','PoolQC','Fence')]
train1=train[,-c('Alley','PoolQC','Fence','MiscFeature')]
sp=sample(train[,-MiscFeature])
