# Case sutdy of women voter in the Pearsonvill
library(randomForest) #Random forest
library(rpart)# decision tree
library(caret)# confusion matrix
library(e1071) # confusion matrix
library(ROCR)# ROC curve
library(rpart.plot)#  tree plotting
library(rattle)# tree plotting
library(ggplot2) #Grammer of graph
library(dplyr) #data Manipulation
#Data import
setwd("/home/sudhir/R/Case-study1")
train=read.csv('traindata_R.csv',header = TRUE,sep=",")
test=read.csv('testdata_R.csv',header=TRUE,sep=",")
# Data manipulation
full=bind_rows(train,test)
table(is.na(full)) #Finding missing values
full%>%
head()
count(full)#Number of people
mean(full$Wife_age) #Average age
mean(full$Number_of_children_ever_born) #Average number of children
table(full$Wife_working) # Percentage of working peolple
working= (369*100)/count(full)
working #  %  #
full$Party_voted_for=as.factor(full$Party_voted_for)
full%>%
count(Party_voted_for) #More women voted patry B
full%>%
count(Party_voted_for) #More women voted patry B
ggplot(full,aes(x=Wife_age,y=Party_voted_for,fill=Party_voted_for))+
geom_bar(stat = 'identity')+
labs(x="Women age",y="Party voted for A/B",title='Educated women prefered Party')+
facet_wrap(~Number_of_children_ever_born)
full%>%
group_by(Wife_age)
ggplot(full,aes(x=Number_of_children_ever_born,y=Party_voted_for,fill=Party_voted_for))+
geom_bar(stat = 'identity')+
labs(x="Number of children ever born",y="Party voted for A/B",title='Chlidren in the family')
full%>%
group_by(Number_of_children_ever_born)
full%>%
count(Wife_education,Party_voted_for)%>%
group_by(Wife_education)%>%
mutate(Party_voted_for=ordered(Party_voted_for,c(0,1)))
full%>%
count(Husband_education,Party_voted_for)%>%
group_by(Husband_education)%>%
mutate(Party_voted_for=ordered(Party_voted_for,c(0,1)))
full%>%
count(Standard_of_living_index,Party_voted_for)%>%
group_by(Party_voted_for)
full%>%
count(Husband_occupation,Party_voted_for)%>%
group_by(Husband_occupation)%>%
mutate(Party_voted_for=ordered(Party_voted_for,c(0,1)))
full%>%
count(Wife_religion,Party_voted_for)%>%
group_by(Party_voted_for)
full%>%
count(Media_exposure,Party_voted_for)%>%
group_by(Party_voted_for)
sp=sample(nrow(full),nrow(full)*.7)
train2=full[sp,]
test2=full[-sp,]
str(train)
srt
srt(test)
str(test)
model.dc=rpart(Party_voted_for~., method = 'class', data=train2)
model.dc$cptable
model.dc=rpart(Party_voted_for~., method = 'class', data=train2)
model.dc$cptable
plot(model.dc)
text(model.dc)
rpart.plot(model.dc)
prtr=prune(model.dc,cp=model.dc$cptable[which.min(model.dc$cptable[,"xerror"]),'CP'])
plot(prtr)
text(prtr)
rpart.plot(model.dc)
pre.dct=predict(prtr,test2,type = 'class')
acc.dc=mean(pre.dct==test2$Party_voted_for)
full%>%
count(Husband_occupation,Party_voted_for)%>%
group_by(Husband_occupation)%>%
mutate(Party_voted_for=ordered(Party_voted_for,c(0,1)))
full%>%
count(Husband_occupation,Party_voted_for)
View(full)
confusionMatrix(pre.dct,test2$Party_voted_for)
model.rf=randomForest(as.factor(Party_voted_for)~.,data=train2,ntree =500,importance = T)
summary(model.rf)
plot(model.rf)
prd.rf=predict(model.rf,test2,method="prob")
acc.rf=mean(prd.rf==test2$Party_voted_for)
confusionMatrix(prd.rf, test2$Party_voted_for)
roc.curve(model.rf,test2)
prf=performance(prd.rf,"tpr","fpr")
main=full
View(main)
main$Wife_education1=ifelse(main$Wife_education==1,1,0)
main$Wife_education2=ifelse(main$Wife_education==2,1,0)
main$Wife_education3=ifelse(main$Wife_education==3,1,0)
main$Wife_education4=ifelse(main$Wife_education==4,1,0)
main$Husband_education1=ifelse(main$Husband_education==1,1,0)
main$Husband_education2=ifelse(main$Husband_education==2,1,0)
main$Husband_education3=ifelse(main$Husband_education==3,1,0)
main$Husband_education4=ifelse(main$Husband_education==4,1,0)
main$Wife_religion0=ifelse(main$Wife_religion==0,1,0)
main$Wife_religion1=ifelse(main$Wife_religion==1,1,0)
main$Wife_working0=ifelse(main$Wife_working==0,1,0)
main$Wife_working1=ifelse(main$Wife_working==1,1,0)
main$Husband_occupation1=ifelse(main$Husband_occupation==1,1,0)
main$Husband_occupation2=ifelse(main$Husband_occupation==2,1,0)
main$Husband_occupation3=ifelse(main$Husband_occupation==3,1,0)
main$Husband_occupation4=ifelse(main$Husband_occupation==4,1,0)
main$Standard_of_living_index1=ifelse(main$Standard_of_living_index==1,1,0)
main$Standard_of_living_index2=ifelse(main$Standard_of_living_index==2,1,0)
main$Standard_of_living_index3=ifelse(main$Standard_of_living_index==3,1,0)
main$Standard_of_living_index4=ifelse(main$Standard_of_living_index==4,1,0)
main$Media_exposure0=ifelse(main$Media_exposure==0,1,0)
main$Media_exposure1=ifelse(main$Media_exposure==1,1,0)
sp=sample(nrow(main),nrow(main)*0.7)
trainlr=main[sp,]
testlr=main[-sp,]
model.glm1=glm(Party_voted_for~., family = binomial(link = "logit"), data=trainlr)
View(trainlr)
